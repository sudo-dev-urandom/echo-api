definitions:
  controllers.CreateUserRequest:
    properties:
      address:
        type: string
      name:
        type: string
    type: object
  models.User:
    properties:
      address:
        type: string
      created_at:
        type: string
      id:
        type: integer
      name:
        type: string
      updated_at:
        type: string
    type: object
info:
  contact: {}
paths:
  /api/v1/users:
    get:
      consumes:
      - multipart/form-data
      description: Get list of users
      operationId: users-user-list
      parameters:
      - default: 1
        description: page number
        in: query
        name: page
        type: integer
      - default: 10
        description: number of bookings in single page
        in: query
        name: pageSize
        type: integer
      produces:
      - text/plain
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.User'
            type: array
      summary: Get list of users
      tags:
      - users
  /api/v1/users/create:
    post:
      consumes:
      - multipart/form-data
      description: Create user
      operationId: users-user-create
      parameters:
      - description: User name
        in: formData
        name: name
        required: true
        type: string
      - description: User address
        in: formData
        name: address
        required: true
        type: string
      produces:
      - text/plain
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
      summary: Create user
      tags:
      - users
  /api/v1/users/delete/{id}:
    delete:
      consumes:
      - multipart/form-data
      description: Delete user
      operationId: users-user-delete
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - text/plain
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
      summary: Delete user
      tags:
      - users
  /api/v1/users/update/{id}:
    patch:
      consumes:
      - multipart/form-data
      description: Update user
      operationId: users-user-update
      parameters:
      - description: ID
        in: path
        name: id
        required: true
        type: integer
      - description: JSON Request Body
        in: body
        name: RequestBody
        required: true
        schema:
          $ref: '#/definitions/controllers.CreateUserRequest'
      produces:
      - text/plain
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
      summary: Update user
      tags:
      - users
swagger: "2.0"
